package usfirst.frc.team2168.robot;

public interface Drawings extends Constants {
	
	double[][] upperBound = {
			{0, FIELD_HEIGHT_FT},
			{FIELD_LENGTH_FT, FIELD_HEIGHT_FT}
		};
		
		double[][] rightBound = {
			{FIELD_LENGTH_FT, 0},
			{FIELD_LENGTH_FT, FIELD_HEIGHT_FT}
		};
		
		double[][] powerCube1 = new double[][] {
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT, FIELD_HEIGHT_FT/2.0 - SWITCH_HEIGHT_FT/2},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT, FIELD_HEIGHT_FT/2.0 - SWITCH_HEIGHT_FT/2 + POWER_CUBE_WIDTH_FT},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT + POWER_CUBE_WIDTH_FT, FIELD_HEIGHT_FT/2.0 - SWITCH_HEIGHT_FT/2 + POWER_CUBE_WIDTH_FT},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT + POWER_CUBE_WIDTH_FT, FIELD_HEIGHT_FT/2.0 - SWITCH_HEIGHT_FT/2},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT, FIELD_HEIGHT_FT/2.0 - SWITCH_HEIGHT_FT/2}
		};
		
		double[][] powerCube2 = new double[][] {
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT, FIELD_HEIGHT_FT/2.0 + SWITCH_HEIGHT_FT/2},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT, FIELD_HEIGHT_FT/2.0 +SWITCH_HEIGHT_FT/2 - POWER_CUBE_WIDTH_FT},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT + POWER_CUBE_WIDTH_FT, FIELD_HEIGHT_FT/2.0+ SWITCH_HEIGHT_FT/2 - POWER_CUBE_WIDTH_FT},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT + POWER_CUBE_WIDTH_FT, FIELD_HEIGHT_FT/2.0 + SWITCH_HEIGHT_FT/2},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT, FIELD_HEIGHT_FT/2.0 + SWITCH_HEIGHT_FT/2},
		};
		
		double[][] blueSwitch = new double[][] {
			{DELTAX_SWITCH_FT, FIELD_HEIGHT_FT/2.0 - SWITCH_HEIGHT_FT/2.0},
			{DELTAX_SWITCH_FT, FIELD_HEIGHT_FT/2.0 + SWITCH_HEIGHT_FT/2.0},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT, FIELD_HEIGHT_FT/2.0 + SWITCH_HEIGHT_FT/2},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT, FIELD_HEIGHT_FT/2.0 - SWITCH_HEIGHT_FT/2},
			{DELTAX_SWITCH_FT, FIELD_HEIGHT_FT/2 - SWITCH_HEIGHT_FT/2},
			{DELTAX_SWITCH_FT, FIELD_HEIGHT_FT/2 - SWITCH_HEIGHT_FT/2 + SWITCH_PLATE_HEIGHT_FT},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT, FIELD_HEIGHT_FT/2 - SWITCH_HEIGHT_FT/2 + SWITCH_PLATE_HEIGHT_FT},
			{DELTAX_SWITCH_FT + SWITCH_LENGTH_FT, FIELD_HEIGHT_FT/2 + SWITCH_HEIGHT_FT/2 - SWITCH_PLATE_HEIGHT_FT},
			{DELTAX_SWITCH_FT, FIELD_HEIGHT_FT/2 + SWITCH_HEIGHT_FT/2 - SWITCH_PLATE_HEIGHT_FT}
		};

		double[][] topLeftPortal = new double[][] {
			{0, FIELD_HEIGHT_FT - PORTAL_Y_FT},
			{PORTAL_X_FT, FIELD_HEIGHT_FT}
		};
		
		double[][] bottomLeftPortal = new double[][] {
			{0, PORTAL_Y_FT},
			{PORTAL_X_FT, 0}
		};
		
		double[][] bottomRightPortal = new double[][] {
			{FIELD_LENGTH_FT - PORTAL_X_FT, 0},
			{FIELD_LENGTH_FT, PORTAL_Y_FT}
		};
		
		double[][] topRightPortal = new double[][] {
			{FIELD_LENGTH_FT - PORTAL_X_FT, FIELD_HEIGHT_FT},
			{FIELD_LENGTH_FT, FIELD_HEIGHT_FT - PORTAL_Y_FT}
		};
		
		double[][] scalePlateBottom = new double[][] {
			{DELTAX_SCALE_PLATE_FT, DELTAY_SCALE_PLATE_FT},
			{DELTAX_SCALE_PLATE_FT, DELTAY_SCALE_PLATE_FT + SCALE_PLATE_HEIGHT_FT},
			{FIELD_LENGTH_FT - DELTAX_SCALE_PLATE_FT, DELTAY_SCALE_PLATE_FT + SCALE_PLATE_HEIGHT_FT},
			{FIELD_LENGTH_FT - DELTAX_SCALE_PLATE_FT, DELTAY_SCALE_PLATE_FT},
			{DELTAX_SCALE_PLATE_FT, DELTAY_SCALE_PLATE_FT},
		};
		
		double[][] scalePlateTop = new double[][] {
			{DELTAX_SCALE_PLATE_FT, FIELD_HEIGHT_FT-DELTAY_SCALE_PLATE_FT},
			{DELTAX_SCALE_PLATE_FT, FIELD_HEIGHT_FT -DELTAY_SCALE_PLATE_FT - SCALE_PLATE_HEIGHT_FT},
			{FIELD_LENGTH_FT - DELTAX_SCALE_PLATE_FT, FIELD_HEIGHT_FT - DELTAY_SCALE_PLATE_FT - SCALE_PLATE_HEIGHT_FT},
			{FIELD_LENGTH_FT - DELTAX_SCALE_PLATE_FT, FIELD_HEIGHT_FT- DELTAY_SCALE_PLATE_FT},
			{DELTAX_SCALE_PLATE_FT, FIELD_HEIGHT_FT-DELTAY_SCALE_PLATE_FT},
		};
		
		double[][] scaleArm = {
			{},
			{}
		};
		
		double[][] blueRamp = new double[][] {
			{DELTAX_SCALE_PLATE_FT, FIELD_HEIGHT_FT/2 + RAMP_HEIGHT_FT/2},
			{DELTAX_RAMP_FT, FIELD_HEIGHT_FT/2 + RAMP_HEIGHT_FT/2},
			{DELTAX_RAMP_FT, FIELD_HEIGHT_FT/2 - RAMP_HEIGHT_FT/2},
			{DELTAX_SCALE_PLATE_FT, FIELD_HEIGHT_FT/2 - RAMP_HEIGHT_FT/2},
		};

		double[][] redRamp = {
			{FIELD_LENGTH_FT- DELTAX_SCALE_PLATE_FT, FIELD_HEIGHT_FT/2 + RAMP_HEIGHT_FT/2},
			{FIELD_LENGTH_FT-DELTAX_RAMP_FT, FIELD_HEIGHT_FT/2 + RAMP_HEIGHT_FT/2},
			{FIELD_LENGTH_FT-DELTAX_RAMP_FT, FIELD_HEIGHT_FT/2 - RAMP_HEIGHT_FT/2},
			{FIELD_LENGTH_FT-DELTAX_SCALE_PLATE_FT, FIELD_HEIGHT_FT/2 - RAMP_HEIGHT_FT/2},
		};
		
		double[][] powerCubeZoneBlue = {
			{DELTAX_SWITCH_FT, FIELD_HEIGHT_FT/2 - POWER_CUBE_ZONE_HEIGHT_FT/2},
			{DELTAX_SWITCH_FT - POWER_CUBE_ZONE_WIDTH_FT, FIELD_HEIGHT_FT/2 - POWER_CUBE_ZONE_HEIGHT_FT/2},
			{DELTAX_SWITCH_FT - POWER_CUBE_ZONE_WIDTH_FT, FIELD_HEIGHT_FT/2 + POWER_CUBE_ZONE_HEIGHT_FT/2},
			{DELTAX_SWITCH_FT, FIELD_HEIGHT_FT/2 + POWER_CUBE_ZONE_HEIGHT_FT/2}
		};
		
		double[][] powerCubeZoneCube = {
			{DELTAX_SWITCH_FT - POWER_CUBE_ZONE_WIDTH_FT, FIELD_HEIGHT_FT/2 - POWER_CUBE_WIDTH_FT/2},
			{DELTAX_SWITCH_FT - POWER_CUBE_ZONE_WIDTH_FT, FIELD_HEIGHT_FT/2 + POWER_CUBE_WIDTH_FT/2},
			{DELTAX_SWITCH_FT - POWER_CUBE_ZONE_WIDTH_FT+ POWER_CUBE_WIDTH_FT, FIELD_HEIGHT_FT/2 + POWER_CUBE_WIDTH_FT/2},
			{DELTAX_SWITCH_FT - POWER_CUBE_ZONE_WIDTH_FT+ POWER_CUBE_WIDTH_FT, FIELD_HEIGHT_FT/2 - POWER_CUBE_WIDTH_FT/2},
			{DELTAX_SWITCH_FT - POWER_CUBE_ZONE_WIDTH_FT, FIELD_HEIGHT_FT/2 - POWER_CUBE_WIDTH_FT/2}
		};
		
		double[][] vaultBlue = {
			{0, FIELD_HEIGHT_FT/2 +DELTAY_MIDLINE_VAULT_FT},
			{VAULT_LENGTH_FT, FIELD_HEIGHT_FT/2 +DELTAY_MIDLINE_VAULT_FT},
			{VAULT_LENGTH_FT, FIELD_HEIGHT_FT/2 +DELTAY_MIDLINE_VAULT_FT+VAULT_HEIGHT_FT},
			{0, FIELD_HEIGHT_FT/2 +DELTAY_MIDLINE_VAULT_FT+VAULT_HEIGHT_FT},
		};

}
